{"ast":null,"code":"var _jsxFileName = \"/home/ritesh/react/hotelapp/src/containers/Account/Account.js\";\nimport React, { Component } from 'react';\nimport classes from './Account.module.css';\nimport Toolbar from '../../components/UI/Toolbar/Toolbar';\nimport { connect } from 'react-redux';\nimport * as accountactions from '../../store/actions/Accountactions';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userdetails: {\n        firstname: null,\n        surname: null,\n        contactnumber: null,\n        address: null\n      }\n    };\n\n    this.valuestore = (event, name) => {\n      let dummystate = { ...this.state.userdetails\n      };\n      dummystate[name] = event.target.value;\n      this.setState({\n        userdetails: dummystate\n      });\n    };\n\n    this.btnclick = event => {\n      event.preventDefault();\n      this.props.save(this.state.userdetails, this.props.token, this.props.userid);\n    };\n\n    this.props.fetch(this.props.token, this.props.userid);\n  }\n\n  render() {\n    return this.props.user ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#eee\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.outaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.formaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"fname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.user.firstname,\n      onChange: event => this.valuestore(event, \"firstname\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"fname\",\n      name: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"sname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, \"Surname\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.user.surname,\n      onChange: event => this.valuestore(event, \"surname\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"sname\",\n      name: \"surname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"cnum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.user.contactnumber,\n      onChange: event => this.valuestore(event, \"contactnumber\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"cnum\",\n      name: \"contactnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.user.address,\n      onChange: event => this.valuestore(event, \"address\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"add\",\n      name: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.btnbook,\n      onClick: this.btnclick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Book\")))) : null;\n  }\n\n}\n\nconst mapstatetoprops = state => {\n  return {\n    user: state.accountreducer.user,\n    token: state.authreducer.token,\n    userid: state.authreducer.userid\n  };\n};\n\nconst mapactionstoprops = dispatch => {\n  return {\n    fetch: (token, userid) => dispatch(accountactions.fetchaccountdetails(token, userid)),\n    save: (user, token, userid) => dispatch(accountactions.saveaccountdetails(user, token, userid))\n  };\n};\n\nexport default connect(mapstatetoprops, mapactionstoprops)(Account);","map":{"version":3,"sources":["/home/ritesh/react/hotelapp/src/containers/Account/Account.js"],"names":["React","Component","classes","Toolbar","connect","accountactions","Account","constructor","props","state","userdetails","firstname","surname","contactnumber","address","valuestore","event","name","dummystate","target","value","setState","btnclick","preventDefault","save","token","userid","fetch","render","user","backgroundColor","height","outaccount","formaccount","inaccount","labelaccount","inputaccount","btnbook","mapstatetoprops","accountreducer","authreducer","mapactionstoprops","dispatch","fetchaccountdetails","saveaccountdetails"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport classes from './Account.module.css'\nimport Toolbar from '../../components/UI/Toolbar/Toolbar'\nimport { connect } from 'react-redux'\nimport * as accountactions from '../../store/actions/Accountactions'\n\nclass Account extends Component{\n\n    state={\n        userdetails:{\n            firstname:null,\n            surname:null,\n            contactnumber:null,\n            address:null,\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.props.fetch(this.props.token,this.props.userid)\n      }\n\n    valuestore=(event,name)=>{\n        let dummystate={...this.state.userdetails}\n        dummystate[name]=event.target.value;\n        this.setState({\n            userdetails:dummystate\n        })\n    }\n\n    btnclick=(event)=>{\n        event.preventDefault();\n        this.props.save(this.state.userdetails,this.props.token,this.props.userid)\n    }\n\n    render(){\n        return(\n            this.props.user?(\n            <div style={{backgroundColor:\"#eee\",height:\"100vh\"}}>\n                <Toolbar/>\n                <div className={classes.outaccount}>\n                    <form className={classes.formaccount}>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"fname\">First Name</label>\n                            <input value={this.props.user.firstname} onChange={(event)=>this.valuestore(event,\"firstname\")} className={classes.inputaccount} type=\"text\" id=\"fname\" name=\"firstname\"></input>\n                        </div>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"sname\">Surname</label>\n                            <input value={this.props.user.surname} onChange={(event)=>this.valuestore(event,\"surname\")} className={classes.inputaccount} type=\"text\" id=\"sname\" name=\"surname\"></input>\n                        </div>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"cnum\">Contact Number</label>\n                            <input value={this.props.user.contactnumber} onChange={(event)=>this.valuestore(event,\"contactnumber\")} className={classes.inputaccount} type=\"text\" id=\"cnum\" name=\"contactnumber\"></input>\n                        </div>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"add\">Address</label>\n                            <input value={this.props.user.address} onChange={(event)=>this.valuestore(event,\"address\")} className={classes.inputaccount} type=\"text\" id=\"add\" name=\"address\"></input>\n                        </div>            \n                        <button className={classes.btnbook} onClick={this.btnclick}>Book</button>\n                    </form>\n                </div>\n            </div>):null\n        )\n    }\n}\n\nconst mapstatetoprops = state => {\n    return{\n        user:state.accountreducer.user,\n        token:state.authreducer.token,\n        userid:state.authreducer.userid,\n    }\n}\n\nconst mapactionstoprops = dispatch => {\n    return{\n        fetch:(token,userid)=>dispatch(accountactions.fetchaccountdetails(token,userid)),\n        save:(user,token,userid)=>dispatch(accountactions.saveaccountdetails(user,token,userid))\n    }\n}\n\nexport default connect(mapstatetoprops,mapactionstoprops)(Account);"]},"metadata":{},"sourceType":"module"}