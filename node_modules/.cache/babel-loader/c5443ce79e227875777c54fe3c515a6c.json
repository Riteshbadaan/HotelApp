{"ast":null,"code":"var _jsxFileName = \"/home/ritesh/react/hotelapp/src/containers/Account/Account.js\";\nimport React, { Component } from 'react';\nimport classes from './Account.module.css';\nimport Toolbar from '../../components/UI/Toolbar/Toolbar';\nimport { connect } from 'react-redux';\nimport * as accountactions from '../../store/actions/Accountactions';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userdetails: {\n        // firstname:this.props.user?this.props.user.firstname:null,\n        // surname:this.props.user?this.props.user.surname:null,\n        // contactnumber:this.props.user?this.props.user.contactnumber:null,\n        // address:this.props.user?this.props.user.address:null,\n        // userId:this.props.user?this.props.user.userId:null\n        firstname: null,\n        surname: null,\n        contactnumber: null,\n        address: null,\n        userId: null\n      }\n    };\n\n    this.valuestore = (event, name) => {\n      let dummystate = { ...this.state.userdetails\n      };\n      dummystate[\"userId\"] = this.props.userid;\n      dummystate[name] = event.target.value;\n      this.setState({\n        userdetails: dummystate\n      });\n    };\n\n    this.btnclick = event => {\n      event.preventDefault();\n      this.props.save(this.state.userdetails, this.props.token, this.props.userid);\n    };\n\n    this.props.fetch(this.props.token, this.props.userid);\n  }\n\n  render() {\n    console.log(this.state.userdetails);\n    return this.props.user && this.state.userdetails.firstname ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#eee\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.outaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.formaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"fname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.userdetails.firstname,\n      onChange: event => this.valuestore(event, \"firstname\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"fname\",\n      name: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"sname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Surname\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.userdetails.surname,\n      onChange: event => this.valuestore(event, \"surname\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"sname\",\n      name: \"surname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"cnum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.userdetails.contactnumber,\n      onChange: event => this.valuestore(event, \"contactnumber\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"cnum\",\n      name: \"contactnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inaccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.labelaccount,\n      for: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.userdetails.address,\n      onChange: event => this.valuestore(event, \"address\"),\n      className: classes.inputaccount,\n      type: \"text\",\n      id: \"add\",\n      name: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.btnbook,\n      onClick: this.btnclick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, this.props.user ? \"Update\" : \"Save\")))) : null;\n  }\n\n}\n\nconst mapstatetoprops = state => {\n  return {\n    user: state.accountreducer.user,\n    token: state.authreducer.token,\n    userid: state.authreducer.userid\n  };\n};\n\nconst mapactionstoprops = dispatch => {\n  return {\n    fetch: (token, userid) => dispatch(accountactions.fetchaccountdetails(token, userid)),\n    save: (user, token, userid) => dispatch(accountactions.saveaccountdetails(user, token, userid))\n  };\n};\n\nexport default connect(mapstatetoprops, mapactionstoprops)(Account);","map":{"version":3,"sources":["/home/ritesh/react/hotelapp/src/containers/Account/Account.js"],"names":["React","Component","classes","Toolbar","connect","accountactions","Account","constructor","props","state","userdetails","firstname","surname","contactnumber","address","userId","valuestore","event","name","dummystate","userid","target","value","setState","btnclick","preventDefault","save","token","fetch","render","console","log","user","backgroundColor","height","outaccount","formaccount","inaccount","labelaccount","inputaccount","btnbook","mapstatetoprops","accountreducer","authreducer","mapactionstoprops","dispatch","fetchaccountdetails","saveaccountdetails"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport classes from './Account.module.css'\nimport Toolbar from '../../components/UI/Toolbar/Toolbar'\nimport { connect } from 'react-redux'\nimport * as accountactions from '../../store/actions/Accountactions'\n\nclass Account extends Component{\n\n    state={\n        userdetails:{\n            // firstname:this.props.user?this.props.user.firstname:null,\n            // surname:this.props.user?this.props.user.surname:null,\n            // contactnumber:this.props.user?this.props.user.contactnumber:null,\n            // address:this.props.user?this.props.user.address:null,\n            // userId:this.props.user?this.props.user.userId:null\n            firstname:null,\n            surname:null,\n            contactnumber:null,\n            address:null,\n            userId:null\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.props.fetch(this.props.token,this.props.userid)\n      }\n\n    valuestore=(event,name)=>{\n        let dummystate={...this.state.userdetails}\n        dummystate[\"userId\"]=this.props.userid\n        dummystate[name]=event.target.value;\n        this.setState({\n            userdetails:dummystate\n        })\n    }\n\n    btnclick=(event)=>{\n        event.preventDefault();\n        this.props.save(this.state.userdetails,this.props.token,this.props.userid)\n    }\n\n    render(){\n        console.log(this.state.userdetails)\n        return(\n            (this.props.user && this.state.userdetails.firstname)?(\n            <div style={{backgroundColor:\"#eee\",height:\"100vh\"}}>\n                <Toolbar/>\n                <div className={classes.outaccount}>\n                    <form className={classes.formaccount}>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"fname\">First Name</label>\n                            <input value={this.state.userdetails.firstname} onChange={(event)=>this.valuestore(event,\"firstname\")} className={classes.inputaccount} type=\"text\" id=\"fname\" name=\"firstname\"></input>\n                        </div>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"sname\">Surname</label>\n                            <input value={this.state.userdetails.surname} onChange={(event)=>this.valuestore(event,\"surname\")} className={classes.inputaccount} type=\"text\" id=\"sname\" name=\"surname\"></input>\n                        </div>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"cnum\">Contact Number</label>\n                            <input value={this.state.userdetails.contactnumber} onChange={(event)=>this.valuestore(event,\"contactnumber\")} className={classes.inputaccount} type=\"text\" id=\"cnum\" name=\"contactnumber\"></input>\n                        </div>\n                        <div className={classes.inaccount}>\n                            <label className={classes.labelaccount} for=\"add\">Address</label>\n                            <input value={this.state.userdetails.address} onChange={(event)=>this.valuestore(event,\"address\")} className={classes.inputaccount} type=\"text\" id=\"add\" name=\"address\"></input>\n                        </div>            \n                        <button className={classes.btnbook} onClick={this.btnclick}>{this.props.user?\"Update\":\"Save\"}</button>\n                    </form>\n                </div>\n            </div>):null\n        )\n    }\n}\n\nconst mapstatetoprops = state => {\n    return{\n        user:state.accountreducer.user,\n        token:state.authreducer.token,\n        userid:state.authreducer.userid,\n    }\n}\n\nconst mapactionstoprops = dispatch => {\n    return{\n        fetch:(token,userid)=>dispatch(accountactions.fetchaccountdetails(token,userid)),\n        save:(user,token,userid)=>dispatch(accountactions.saveaccountdetails(user,token,userid))\n    }\n}\n\nexport default connect(mapstatetoprops,mapactionstoprops)(Account);"]},"metadata":{},"sourceType":"module"}